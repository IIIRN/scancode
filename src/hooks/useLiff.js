'use client';

import { useState, useEffect } from 'react';
import { db } from '../lib/firebase'; // ‡∏õ‡∏£‡∏±‡∏ö path ‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
import { doc, getDoc } from 'firebase/firestore';

const MOCK_PROFILE = {
    liffProfile: {
        userId: 'U_PC_USER_001',
        displayName: '‡∏Ñ‡∏∏‡∏ì‡∏ó‡∏î‡∏™‡∏≠‡∏ö (PC Mode)',
        pictureUrl: 'https://via.placeholder.com/150'
    },
    // ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏´‡∏°‡πà‡∏ö‡∏ô PC ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô DB
    studentDbProfile: null 
};

export default function useLiff() {
  const [liffProfile, setLiffProfile] = useState(null);
  const [studentDbProfile, setStudentDbProfile] = useState(null); // üëà State ‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô DB
  const [isLoading, setIsLoading] = useState(true);
  const [error, setError] = useState('');
  const [liffObject, setLiffObject] = useState(null);

  useEffect(() => {
    const initialize = async () => {
      try {
        const liff = (await import('@line/liff')).default;
        const liffId = process.env.NEXT_PUBLIC_LIFF_ID;
        if (!liffId) throw new Error("LIFF ID is not defined");
        
        await liff.init({ liffId });
        setLiffObject(liff);

        if (!liff.isInClient()) {
          console.warn("Running on PC. Using MOCK_PROFILE.");
          setLiffProfile(MOCK_PROFILE.liffProfile);
          setStudentDbProfile(MOCK_PROFILE.studentDbProfile);
          setIsLoading(false);
          return;
        }

        if (liff.isLoggedIn()) {
          const profile = await liff.getProfile();
          setLiffProfile(profile);
          
          // --- üëà ‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ ---
          // ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏î‡πâ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå LINE ‡πÅ‡∏•‡πâ‡∏ß ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô Firestore ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ
          const studentDocRef = doc(db, 'studentProfiles', profile.userId);
          const studentDocSnap = await getDoc(studentDocRef);

          if (studentDocSnap.exists()) {
            setStudentDbProfile(studentDocSnap.data());
          } else {
            setStudentDbProfile(null); // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ null ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏à‡∏≠
          }
          // --- ‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤ ---

        } else {
          liff.login();
        }
      } catch (err) {
        setError(`LIFF Error: ${err.message}`);
      } finally {
        setIsLoading(false);
      }
    };
    initialize();
  }, []);

  // ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ state ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ‡∏£‡∏ß‡∏°‡∏ñ‡∏∂‡∏á‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏à‡∏≤‡∏Å DB
  return { liffObject, liffProfile, studentDbProfile, isLoading, error, setStudentDbProfile };
};